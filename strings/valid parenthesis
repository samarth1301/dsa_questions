//question link : https://leetcode.com/problems/valid-parentheses/
//simple solutiuon using stacks 
//time complexity : O(N)

class Solution {
public:
    bool isValid(string s) {
        stack <char> st;
        
        for(int i=0;i<s.size();i++){
            if(s[i]=='('|| s[i]=='{'|| s[i]=='['){
                st.push(s[i]);
                continue;
            }
            if(st.empty()){
                return false;
            }
             if(s[i]==')' && st.top()=='('){
                 //cout<<st.top()<<endl;
                st.pop();  continue;
           }
           if(s[i]==')' && st.top()!='('){
               return false;
           }
             if(s[i]=='}' && st.top()=='{'){
               st.pop();  continue;
           }
            if(s[i]=='}' && st.top()!='{'){
               return false;
           }
              if(s[i]==']' && st.top()=='['){
               st.pop();  continue;
           }
            if(s[i]==']' && st.top()!='['){
               return false;
           }
        }
        //cout<<st.top();
        if(st.empty())
            return true;
        return false;
    }
};
